#
# scidb4geo - A SciDB plugin for managing spatially referenced arrays
# Copyright (C) 2015 Marius Appel <marius.appel@uni-muenster.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------------

# CURRENTLY, THE LIBRARY FILE BUILDS SUCCESSFULLY BUT SCIDB CRASHES WITH SOME TYPESYSTEM ERRORS AFTER LOADING. 
# PLEASE BUILD THE PLUGIN WITHIN THE SCIDB SOURCES INSTEAD

cmake_minimum_required (VERSION 2.8.11)
project (scidb4geo)


set (scidb4geo_VERSION_MAJOR 0)
set (scidb4geo_VERSION_MINOR 1)
configure_file( ${CMAKE_CURRENT_LIST_DIR}/src/plugin.h.in ${CMAKE_CURRENT_LIST_DIR}/src/plugin.h )


set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}") # Add custom FindSciDB module
set (scidb4geo_src
    src/plugin.cxx
    src/eo_setsrs/LogicalSetSRS.cxx
    src/eo_setsrs/PhysicalSetSRS.cxx
    src/eo_getsrs/LogicalGetSRS.cxx
    src/eo_getsrs/PhysicalGetSRS.cxx
    src/eo_arrays/LogicalArrays.cxx
    src/eo_arrays/PhysicalArrays.cxx
    src/eo_regnewsrs/LogicalRegNewSRS.cxx
    src/eo_regnewsrs/PhysicalRegNewSRS.cxx
    src/eo_bbox/LogicalBBOX.cxx
    src/eo_bbox/PhysicalBBOX.cxx
    src/eo_bbox/LogicalBBOX.cxx
    src/eo_cpsrs/PhysicalCpSRS.cxx
    src/eo_cpsrs/LogicalCpSRS.cxx
    src/PostgresWrapper.cxx
    src/AffineTransform.cxx
)
add_library(scidb4geo SHARED ${scidb4geo_src} ${scidb4geo_include} )


# Dependencies

# Postgres
set (PostgreSQL_ADDITIONAL_VERSIONS "9.3" "9.3.6")
set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "/usr/include/postgresql/9.3/server")
find_package(PostgreSQL REQUIRED)
if (PostgreSQL_FOUND)
  include_directories(${PostgreSQL_INCLUDE_DIRS})
  target_link_libraries (scidb4geo ${PostgreSQL_LIBRARIES})
  message(STATUS "PostgreSQL libraries and headers found")
endif (PostgreSQL_FOUND)

# SciDB
find_package(SciDB REQUIRED)
if (SciDB_FOUND)
  include_directories(${SciDB_INCLUDE_DIRS})
  target_link_libraries (scidb4geo ${SciDB_LIBRARIES})
  message(STATUS "SciDB libraries and headers found")
endif (SciDB_FOUND)

# Boost
set (BOOST_ROOT ${SciDB_ROOT}/3rdparty/boost)
find_package(Boost REQUIRED COMPONENTS system thread)
if (Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  target_link_libraries (scidb4geo ${Boost_LIBRARIES})
  message(STATUS "Boost libraries and headers found")
endif (Boost_FOUND)

# Log4xx
find_library(Log4cxx_LIBRARY  NAMES log4cxx
  PATHS  
    /usr /usr/local ${SciDB_ROOT}
  PATH_SUFFIXES
    lib
)   
if (NOT Log4cxx_LIBRARY) 
  message(FATAL_ERROR "Log4cxx library not found!")
else (NOT Log4cxx_LIBRARY) 
  target_link_libraries (scidb4geo ${Log4cxx_LIBRARY}) # Is this needed? should be in default lib path
endif (NOT Log4cxx_LIBRARY)


set_target_properties(scidb4geo PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/install)
add_custom_command(TARGET scidb4geo POST_BUILD COMMAND ${CMAKE_COMMAND} -E tar "cfvz" "scidb4geo.tgz" ${CMAKE_CURRENT_LIST_DIR}/install) 




 